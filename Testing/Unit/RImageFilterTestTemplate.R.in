#==========================================================================
#
#   Copyright Insight Software Consortium
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#          http://www.apache.org/licenses/LICENSE-2.0.txt
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
#==========================================================================*/

#
# WARNING: DO NOT EDIT THIS FILE!
# THIS FILE IS AUTOMATICALLY GENERATED BY THE SIMPLEITK BUILD PROCESS.
# Please look at RImageFilterTestTemplate.R.in to make changes.
#

#
# This is R code to test ${name}
#

source( Sys.getenv( "R_SIMPLEITK_LOADER" ) )

inputs <- 1
$(if number_of_inputs then
    OUT=[[inputs <- ${number_of_inputs}]]
  end)

# arguments after --args
args <- commandArgs( TRUE )

numberOfArguments <- length(args)

if ( numberOfArguments < inputs + 2) {
    print ( "Usage: ${name} tag <input(s)> output" )
    quit( save="no", status=1 )
}

tag <- args[[1]]

writer <- ImageFileWriter()
filter <- ${name}ImageFilter()

$(if #tests == 0 then
    OUT=[[
print ( 'No tests defined!' )
quit( save="no", status=1 )
    ]]
  end)

argument2 <- args[[2]]
argument3 <- args[[3]]

lastargument <- args[[numberOfArguments]]

$(foreach tests
if(tag == "${tag}") {
  $(when settings
$(foreach settings
$(if parameter == "SeedList" then
    OUT=[[
      filter <- filter$$ClearSeeds()
      $(for i=1,#value do
        OUT=OUT .. "filter <- filter$$AddSeed( " .. R_value[i] .. " )\n"
       end)
    ]]
else
OUT=[[
   filter <- filter$$Set${parameter}($(if R_value then OUT='${R_value}' else OUT='${value}' end) )
  ]]
end)
)
)

  inputs <- list()
  for ( i in 3:length(args)-1 )
  {
  inputs[[length(inputs)+1]] <- ReadImage( args[[i]] )
  }

$(if inputA_cast then
 OUT="  inputs[[1]] = Cast( inputs[[1]], R${inputA_cast}_get() )"
end)
$(if inputB_cast then
 OUT="  inputs[[2]] = Cast( inputs[[2]], R${inputB_cast}_get() )"
end)

  output <- filter$$Execute ( $(if #inputs > 0 then OUT="inputs[[1]] " end)$(for inum=2,#inputs do OUT=OUT..", inputs[["..inum.."]]" end) )

  writer <- writer$$SetFileName( lastargument )
  writer <- writer$$Execute( output )

  }
)

quit( save="no", status=0 )
