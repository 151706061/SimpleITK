trigger:
  - master
  - release
pr: none
jobs:
  - job: 'VS19'
    pool:
      name: 'Default'
      demands:
      - VisualStudio_16.0
    timeoutInMinutes: 360
    workspace:
      clean: all
    steps:
        - script: |
            git clone -b dashboard --single-branch $(Build.Repository.Uri) SimpleITK-dashboard
          displayName: Download dashboard scripts and testing data
          workingDirectory: $(Agent.BuildDirectory)
        - script: |
            env
            cmake --version
            ctest -S "$(Build.SourcesDirectory)/Testing/CI/Azure/azure.cmake" -V
          displayName: Build and test
          env:
            CTEST_BUILD_CONFIGURATION: MinSizeRel
            CTEST_OUTPUT_ON_FALURE: 1
            CTEST_CMAKE_GENERATOR: "Visual Studio 16 2019"
            DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
            ITK_GLOBAL_DEFAULT_NUMBER_OF_THREADS: 2
            CXXFLAGS: /MP
            CFLAGS: /MP
          workingDirectory: $(Agent.BuildDirectory)
  - job: 'LinuxGCC'
    pool:
      name: 'Default'
      demands:
      - Agent.OS -equals Linux
    strategy:
      matrix:
       default: {}
       devtools-3:
         env_file: '/opt/rh/devtoolset-3/enable'
       devtools-4:
         env_file: '/opt/rh/devtoolset-4/enable'
       devtools-6:
         env_file: '/opt/rh/devtoolset-6/enable'
       devtools-7:
         env_file: '/opt/rh/devtoolset-7/enable'
       devtools-8:
         env_file: '/opt/rh/devtoolset-8/enable'
    timeoutInMinutes: 360
    workspace:
      clean: all
    steps:
        - script: |
            git clone -b dashboard --single-branch $(Build.Repository.Uri) SimpleITK-dashboard
          displayName: Download dashboard scripts and testing data
          workingDirectory: $(Agent.BuildDirectory)
        - script: |
            [[ ! -z "$(env_file)" ]] && source $(env_file)
            cmake --version
            gcc --version
            ccache -p
            ctest -S "$(Build.SourcesDirectory)/Testing/CI/Azure/azure.cmake" -V
            ccache --show-stats
          displayName: Build and test
          env:
            CTEST_OUTPUT_ON_FALURE: 1
            DASHBOARD_BRANCH_DIRECTORY: $(Agent.BuildDirectory)/SimpleITK-dashboard
            CTEST_CACHE: |
              BUILD_DOCUMENTS:BOOL=OFF
              BUILD_EXAMPLES:BOOL=ON
              BUILD_SHARED_LIBS:BOOL=OFF
              BUILD_TESTING:BOOL=ON
              WRAP_DEFAULT:BOOL=ON
              CMAKE_CXX_COMPILER_LAUNCHER=/usr/bin/ccache
              CMAKE_C_COMPILER_LAUNCHER=/usr/bin/ccache
          workingDirectory: $(Agent.BuildDirectory)
