{
  "name" : "Convolution",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "number_of_inputs" : 2,
  "doc" : "Some global documentation",
  "pixel_types" : "BasicPixelIDTypeList",
  "public_declarations" : "    typedef enum { SAME = 0, VALID = 1} OutputRegionMode;",
  "custom_set_input" : "filter->SetInput( image1 ); filter->SetKernelImage( image2 );",
  "members" : [ {
    "name" : "Normalize",
    "type" : "bool",
    "default" : "false",
    "doc" : "",
    "briefdescriptionSet" : "",
    "detaileddescriptionSet" : "Normalize the output image by the sum of the kernel components\n",
    "briefdescriptionGet" : "",
    "detaileddescriptionGet" : ""
  }, {
    "name" : "OutputRegionMode",
    "type" : "ConvolutionImageFilter::OutputRegionMode",
    "default" : "itk::simple::ConvolutionImageFilter::SAME",
    "custom_itk_cast" : "filter->SetOutputRegionMode( typename FilterType::OutputRegionModeType( int( this->m_OutputRegionMode ) ) );"
  } ],
  "tests" : [ {
    "tag" : "defaults",
    "description" : "Basic convolution with gaussian",
    "inputA" : "Input/cthead1-Float.mha",
    "inputB" : "Input/Gaussian_1.5.nrrd",
    "settings" : [ ],
    "tolerance" : "0.0001"
  } ],
  "briefdescription" : "Convolve a given image with an arbitrary image kernel.\n",
  "detaileddescription" : "http://hdl.handle.net/1926/1323\n\\author Nicholas J. Tustison\nJames C. Gee\n\\li {ImageProcessing/ConvolutionImageFilter,Convolve an image with a kernel}\n\n\n"
}